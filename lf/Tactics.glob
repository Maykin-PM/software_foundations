DIGEST 312f208abc08f7f2554652f45d527ba0
FLF.Tactics
R698:701 LF.Poly <> <> lib
prf 977:982 <> silly1
R1000:1002 Coq.Init.Datatypes <> nat ind
R1013:1018 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1020:1022 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1019:1019 LF.Tactics <> n var
R1023:1023 LF.Tactics <> m var
R1009:1011 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1008:1008 LF.Tactics <> n var
R1012:1012 LF.Tactics <> m var
prf 1540:1545 <> silly2
R1567:1569 Coq.Init.Datatypes <> nat ind
R1580:1585 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1586:1586 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1609:1615 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1621:1623 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1616:1616 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1618:1618 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1620:1620 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1617:1617 LF.Tactics <> n var
R1619:1619 LF.Tactics <> o var
R1624:1624 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1626:1626 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1628:1628 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1625:1625 LF.Tactics <> m var
R1627:1627 LF.Tactics <> p var
R1592:1595 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R1601:1603 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1596:1596 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1598:1598 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1600:1600 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1597:1597 LF.Tactics <> n var
R1599:1599 LF.Tactics <> o var
R1604:1604 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1606:1606 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1608:1608 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R1605:1605 LF.Tactics <> m var
R1607:1607 LF.Tactics <> p var
R1588:1590 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1587:1587 LF.Tactics <> n var
R1591:1591 LF.Tactics <> m var
R1576:1578 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1575:1575 LF.Tactics <> n var
R1579:1579 LF.Tactics <> m var
prf 2162:2168 <> silly2a
R2186:2188 Coq.Init.Datatypes <> nat ind
R2207:2213 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2214:2214 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2261:2267 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2271:2273 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2268:2268 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2270:2270 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2269:2269 LF.Tactics <> n var
R2274:2274 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2276:2276 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2275:2275 LF.Tactics <> m var
R2229:2231 Coq.Init.Datatypes <> nat ind
R2248:2251 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2255:2257 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2252:2252 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2254:2254 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2253:2253 LF.Tactics <> q var
R2258:2258 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2260:2260 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R2259:2259 LF.Tactics <> r var
R2240:2242 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2235:2235 LF.Poly <> :::'('_x_','_x_')' not
R2237:2237 LF.Poly <> :::'('_x_','_x_')' not
R2239:2239 LF.Poly <> :::'('_x_','_x_')' not
R2236:2236 LF.Tactics <> q var
R2238:2238 LF.Tactics <> q var
R2243:2243 LF.Poly <> :::'('_x_','_x_')' not
R2245:2245 LF.Poly <> :::'('_x_','_x_')' not
R2247:2247 LF.Poly <> :::'('_x_','_x_')' not
R2244:2244 LF.Tactics <> r var
R2246:2246 LF.Tactics <> r var
R2199:2201 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2194:2194 LF.Poly <> :::'('_x_','_x_')' not
R2196:2196 LF.Poly <> :::'('_x_','_x_')' not
R2198:2198 LF.Poly <> :::'('_x_','_x_')' not
R2195:2195 LF.Tactics <> n var
R2197:2197 LF.Tactics <> n var
R2202:2202 LF.Poly <> :::'('_x_','_x_')' not
R2204:2204 LF.Poly <> :::'('_x_','_x_')' not
R2206:2206 LF.Poly <> :::'('_x_','_x_')' not
R2203:2203 LF.Tactics <> m var
R2205:2205 LF.Tactics <> m var
prf 2475:2482 <> silly_ex
R2498:2498 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2544:2550 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2551:2551 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2592:2598 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2612:2617 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2627:2629 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2618:2620 LF.Basics <> odd def
R2623:2623 Coq.Init.Datatypes <> S constr
R2625:2625 LF.Tactics <> p var
R2630:2633 LF.Basics <> true constr
R2605:2607 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2599:2602 LF.Basics <> even def
R2604:2604 LF.Tactics <> p var
R2608:2611 LF.Basics <> true constr
R2576:2579 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2585:2587 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2580:2582 LF.Basics <> odd def
R2584:2584 LF.Tactics <> n var
R2588:2591 LF.Basics <> true constr
R2568:2570 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2562:2565 LF.Basics <> even def
R2567:2567 LF.Tactics <> n var
R2571:2575 LF.Basics <> false constr
R2522:2525 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2536:2538 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2526:2529 LF.Basics <> even def
R2532:2532 Coq.Init.Datatypes <> S constr
R2534:2534 LF.Tactics <> n var
R2539:2543 LF.Basics <> false constr
R2515:2517 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2509:2512 LF.Basics <> even def
R2514:2514 LF.Tactics <> n var
R2518:2521 LF.Basics <> true constr
prf 2974:2979 <> silly3
R2997:2999 Coq.Init.Datatypes <> nat ind
R3010:3015 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3017:3019 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3016:3016 LF.Tactics <> m var
R3020:3020 LF.Tactics <> n var
R3006:3008 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3005:3005 LF.Tactics <> n var
R3009:3009 LF.Tactics <> m var
R3626:3628 LF.Poly <> rev def
prf 3640:3652 <> rev_exercise1
R3671:3674 LF.Poly <> list ind
R3676:3678 Coq.Init.Datatypes <> nat ind
R3694:3699 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3702:3704 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3700:3701 LF.Tactics <> l' var
R3705:3707 LF.Poly <> rev def
R3709:3709 LF.Tactics <> l var
R3685:3687 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3684:3684 LF.Tactics <> l var
R3688:3690 LF.Poly <> rev def
R3692:3693 LF.Tactics <> l' var
R3769:3782 LF.Poly <> rev_involutive thm
R3769:3782 LF.Poly <> rev_involutive thm
def 4257:4272 <> trans_eq_example
R4298:4300 Coq.Init.Datatypes <> nat ind
R4322:4330 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4344:4352 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4358:4360 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4353:4353 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4355:4355 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4357:4357 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4354:4354 LF.Tactics <> a var
R4356:4356 LF.Tactics <> b var
R4361:4361 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4363:4363 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4365:4365 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4362:4362 LF.Tactics <> e var
R4364:4364 LF.Tactics <> f var
R4336:4338 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4331:4331 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4333:4333 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4335:4335 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4332:4332 LF.Tactics <> c var
R4334:4334 LF.Tactics <> d var
R4339:4339 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4341:4341 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4343:4343 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4340:4340 LF.Tactics <> e var
R4342:4342 LF.Tactics <> f var
R4314:4316 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4309:4309 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4311:4311 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4313:4313 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4310:4310 LF.Tactics <> a var
R4312:4312 LF.Tactics <> b var
R4317:4317 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4319:4319 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4321:4321 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4318:4318 LF.Tactics <> c var
R4320:4320 LF.Tactics <> d var
prf 4625:4632 <> trans_eq
R4661:4661 LF.Tactics <> X var
R4672:4675 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4681:4684 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4686:4688 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4685:4685 LF.Tactics <> n var
R4689:4689 LF.Tactics <> o var
R4677:4679 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4676:4676 LF.Tactics <> m var
R4680:4680 LF.Tactics <> o var
R4668:4670 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4667:4667 LF.Tactics <> n var
R4671:4671 LF.Tactics <> m var
def 4944:4960 <> trans_eq_example'
R4986:4988 Coq.Init.Datatypes <> nat ind
R5010:5018 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5032:5040 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5046:5048 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5041:5041 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5043:5043 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5045:5045 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5042:5042 LF.Tactics <> a var
R5044:5044 LF.Tactics <> b var
R5049:5049 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5051:5051 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5053:5053 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5050:5050 LF.Tactics <> e var
R5052:5052 LF.Tactics <> f var
R5024:5026 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5019:5019 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5021:5021 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5023:5023 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5020:5020 LF.Tactics <> c var
R5022:5022 LF.Tactics <> d var
R5027:5027 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5029:5029 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5031:5031 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5028:5028 LF.Tactics <> e var
R5030:5030 LF.Tactics <> f var
R5002:5004 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4997:4997 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4999:4999 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5001:5001 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R4998:4998 LF.Tactics <> a var
R5000:5000 LF.Tactics <> b var
R5005:5005 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5007:5007 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5009:5009 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5006:5006 LF.Tactics <> c var
R5008:5008 LF.Tactics <> d var
R5526:5526 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5528:5528 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5530:5530 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5508:5515 LF.Tactics <> trans_eq thm
R5526:5526 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5528:5528 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5530:5530 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R5508:5515 LF.Tactics <> trans_eq thm
def 6010:6027 <> trans_eq_example''
R6053:6055 Coq.Init.Datatypes <> nat ind
R6077:6085 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6099:6107 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6113:6115 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6108:6108 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6110:6110 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6112:6112 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6109:6109 LF.Tactics <> a var
R6111:6111 LF.Tactics <> b var
R6116:6116 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6118:6118 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6120:6120 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6117:6117 LF.Tactics <> e var
R6119:6119 LF.Tactics <> f var
R6091:6093 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6086:6086 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6088:6088 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6090:6090 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6087:6087 LF.Tactics <> c var
R6089:6089 LF.Tactics <> d var
R6094:6094 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6096:6096 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6098:6098 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6095:6095 LF.Tactics <> e var
R6097:6097 LF.Tactics <> f var
R6069:6071 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6064:6064 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6066:6066 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6068:6068 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6065:6065 LF.Tactics <> a var
R6067:6067 LF.Tactics <> b var
R6072:6072 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6074:6074 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6076:6076 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6073:6073 LF.Tactics <> c var
R6075:6075 LF.Tactics <> d var
R6175:6175 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6177:6177 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6179:6179 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6175:6175 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6177:6177 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R6179:6179 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 6292:6308 <> trans_eq_exercise
R6330:6332 Coq.Init.Datatypes <> nat ind
R6357:6365 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6377:6385 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6386:6386 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6392:6396 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6407:6407 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6388:6390 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R6387:6387 LF.Tactics <> n var
R6391:6391 LF.Tactics <> p var
R6397:6404 LF.Basics <> minustwo def
R6406:6406 LF.Tactics <> o var
R6366:6366 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6372:6375 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6368:6370 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R6367:6367 LF.Tactics <> n var
R6371:6371 LF.Tactics <> p var
R6376:6376 LF.Tactics <> m var
R6342:6345 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6356:6356 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6341:6341 LF.Tactics <> m var
R6346:6353 LF.Basics <> minustwo def
R6355:6355 LF.Tactics <> o var
prf 7828:7838 <> S_injective
R7856:7858 Coq.Init.Datatypes <> nat ind
R7873:7878 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7880:7882 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7879:7879 LF.Tactics <> n var
R7883:7883 LF.Tactics <> m var
R7867:7869 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7864:7864 Coq.Init.Datatypes <> S constr
R7866:7866 LF.Tactics <> n var
R7870:7870 Coq.Init.Datatypes <> S constr
R7872:7872 LF.Tactics <> m var
R7925:7927 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7928:7931 Coq.Init.Peano <> pred syndef
R7934:7934 Coq.Init.Datatypes <> S constr
R7925:7927 Coq.Init.Logic <> ::type_scope:x_'='_x not
R7928:7931 Coq.Init.Peano <> pred syndef
R7934:7934 Coq.Init.Datatypes <> S constr
prf 8423:8434 <> S_injective'
R8452:8454 Coq.Init.Datatypes <> nat ind
R8469:8474 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8476:8478 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8475:8475 LF.Tactics <> n var
R8479:8479 LF.Tactics <> m var
R8463:8465 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8460:8460 Coq.Init.Datatypes <> S constr
R8462:8462 LF.Tactics <> n var
R8466:8466 Coq.Init.Datatypes <> S constr
R8468:8468 LF.Tactics <> m var
prf 8983:8995 <> injection_ex1
R9015:9017 Coq.Init.Datatypes <> nat ind
R9036:9041 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9043:9045 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9042:9042 LF.Tactics <> n var
R9046:9046 LF.Tactics <> m var
R9028:9030 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9023:9023 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9025:9025 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9027:9027 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9024:9024 LF.Tactics <> n var
R9026:9026 LF.Tactics <> m var
R9031:9031 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9033:9033 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9035:9035 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R9032:9032 LF.Tactics <> o var
R9034:9034 LF.Tactics <> o var
def 9231:9243 <> injection_ex3
R9274:9274 LF.Tactics <> X var
R9284:9287 LF.Poly <> list ind
R9289:9289 LF.Tactics <> X var
R9315:9320 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9331:9336 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9338:9340 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9337:9337 LF.Tactics <> x var
R9341:9341 LF.Tactics <> y var
R9322:9324 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9321:9321 LF.Tactics <> j var
R9326:9329 LF.Poly <> :::x_'::'_x not
R9325:9325 LF.Tactics <> z var
R9330:9330 LF.Tactics <> l var
R9306:9308 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9296:9299 LF.Poly <> :::x_'::'_x not
R9295:9295 LF.Tactics <> x var
R9301:9304 LF.Poly <> :::x_'::'_x not
R9300:9300 LF.Tactics <> y var
R9305:9305 LF.Tactics <> l var
R9310:9313 LF.Poly <> :::x_'::'_x not
R9309:9309 LF.Tactics <> z var
R9314:9314 LF.Tactics <> j var
prf 10206:10221 <> discriminate_ex1
R10239:10241 Coq.Init.Datatypes <> nat ind
R10259:10264 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10266:10268 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10265:10265 LF.Tactics <> n var
R10269:10269 LF.Tactics <> m var
R10252:10254 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10247:10251 LF.Basics <> false constr
R10255:10258 LF.Basics <> true constr
prf 10335:10350 <> discriminate_ex2
R10366:10368 Coq.Init.Datatypes <> nat ind
R10381:10386 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10392:10394 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10388:10390 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R10377:10379 Coq.Init.Logic <> ::type_scope:x_'='_x not
R10374:10374 Coq.Init.Datatypes <> S constr
R10376:10376 LF.Tactics <> n var
R10380:10380 Coq.Init.Datatypes <> O constr
def 11218:11233 <> discriminate_ex3
R11266:11266 LF.Tactics <> X var
R11276:11279 LF.Poly <> list ind
R11281:11281 LF.Tactics <> X var
R11305:11312 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11314:11316 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11313:11313 LF.Tactics <> x var
R11317:11317 LF.Tactics <> z var
R11300:11302 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11290:11293 LF.Poly <> :::x_'::'_x not
R11289:11289 LF.Tactics <> x var
R11295:11298 LF.Poly <> :::x_'::'_x not
R11294:11294 LF.Tactics <> y var
R11299:11299 LF.Tactics <> l var
R11303:11304 LF.Poly <> :::'['_']' not
prf 11592:11598 <> eqb_0_l
R11628:11631 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11633:11635 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11632:11632 LF.Tactics <> n var
R11621:11623 Coq.Init.Logic <> ::type_scope:x_'='_x not
R11616:11619 LF.Basics <> ::nat_scope:x_'=?'_x not
R11620:11620 LF.Tactics <> n var
R11624:11627 LF.Basics <> true constr
prf 12518:12524 <> f_equal
R12553:12556 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12557:12557 LF.Tactics <> B var
R12552:12552 LF.Tactics <> A var
R12566:12566 LF.Tactics <> A var
R12577:12580 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12584:12586 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12581:12581 LF.Tactics <> f var
R12583:12583 LF.Tactics <> x var
R12587:12587 LF.Tactics <> f var
R12589:12589 LF.Tactics <> y var
R12573:12575 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12572:12572 LF.Tactics <> x var
R12576:12576 LF.Tactics <> y var
prf 12661:12681 <> eq_implies_succ_equal
R12699:12701 Coq.Init.Datatypes <> nat ind
R12712:12715 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12719:12721 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12716:12716 Coq.Init.Datatypes <> S constr
R12718:12718 LF.Tactics <> n var
R12722:12722 Coq.Init.Datatypes <> S constr
R12724:12724 LF.Tactics <> m var
R12708:12710 Coq.Init.Logic <> ::type_scope:x_'='_x not
R12707:12707 LF.Tactics <> n var
R12711:12711 LF.Tactics <> m var
R12754:12760 LF.Tactics <> f_equal thm
R12754:12760 LF.Tactics <> f_equal thm
prf 13206:13227 <> eq_implies_succ_equal'
R13245:13247 Coq.Init.Datatypes <> nat ind
R13258:13261 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13265:13267 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13262:13262 Coq.Init.Datatypes <> S constr
R13264:13264 LF.Tactics <> n var
R13268:13268 Coq.Init.Datatypes <> S constr
R13270:13270 LF.Tactics <> m var
R13254:13256 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13253:13253 LF.Tactics <> n var
R13257:13257 LF.Tactics <> m var
prf 13753:13757 <> S_inj
R13775:13777 Coq.Init.Datatypes <> nat ind
R13785:13788 LF.Basics <> bool ind
R13814:13820 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13821:13821 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13828:13831 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13823:13826 LF.Basics <> ::nat_scope:x_'=?'_x not
R13822:13822 LF.Tactics <> n var
R13827:13827 LF.Tactics <> m var
R13832:13832 LF.Tactics <> b var
R13794:13794 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13809:13812 Coq.Init.Logic <> ::type_scope:x_'='_x not
R13795:13795 LF.Basics <> ::nat_scope:x_'=?'_x not
R13799:13804 LF.Basics <> ::nat_scope:x_'=?'_x not
R13808:13808 LF.Basics <> ::nat_scope:x_'=?'_x not
R13796:13796 Coq.Init.Datatypes <> S constr
R13798:13798 LF.Tactics <> n var
R13805:13805 Coq.Init.Datatypes <> S constr
R13807:13807 LF.Tactics <> m var
R13813:13813 LF.Tactics <> b var
prf 14663:14668 <> silly4
R14690:14692 Coq.Init.Datatypes <> nat ind
R14698:14698 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14713:14719 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14725:14730 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14732:14734 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14731:14731 LF.Tactics <> q var
R14735:14735 LF.Tactics <> p var
R14721:14723 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14720:14720 LF.Tactics <> m var
R14724:14724 LF.Tactics <> n var
R14704:14707 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14709:14711 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14708:14708 LF.Tactics <> p var
R14712:14712 LF.Tactics <> q var
R14700:14702 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14699:14699 LF.Tactics <> n var
R14703:14703 LF.Tactics <> m var
prf 16045:16062 <> specialize_example
R16080:16080 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16098:16104 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16106:16108 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16105:16105 LF.Tactics <> n var
R16094:16096 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16092:16092 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R16091:16091 LF.Tactics <> m var
R16093:16093 LF.Tactics <> n var
R16187:16194 LF.Induction <> add_comm thm
R16187:16194 LF.Induction <> add_comm thm
R16187:16194 LF.Induction <> add_comm thm
def 16351:16369 <> trans_eq_example'''
R16395:16397 Coq.Init.Datatypes <> nat ind
R16419:16427 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16441:16449 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16455:16457 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16450:16450 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16452:16452 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16454:16454 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16451:16451 LF.Tactics <> a var
R16453:16453 LF.Tactics <> b var
R16458:16458 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16460:16460 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16462:16462 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16459:16459 LF.Tactics <> e var
R16461:16461 LF.Tactics <> f var
R16433:16435 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16428:16428 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16430:16430 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16432:16432 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16429:16429 LF.Tactics <> c var
R16431:16431 LF.Tactics <> d var
R16436:16436 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16438:16438 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16440:16440 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16437:16437 LF.Tactics <> e var
R16439:16439 LF.Tactics <> f var
R16411:16413 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16406:16406 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16408:16408 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16410:16410 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16407:16407 LF.Tactics <> a var
R16409:16409 LF.Tactics <> b var
R16414:16414 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16416:16416 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16418:16418 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16415:16415 LF.Tactics <> c var
R16417:16417 LF.Tactics <> d var
R16533:16533 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16535:16535 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16537:16537 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16515:16522 LF.Tactics <> trans_eq thm
R16533:16533 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16535:16535 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16537:16537 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R16515:16522 LF.Tactics <> trans_eq thm
prf 17735:17757 <> double_injective_FAILED
R17794:17799 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17801:17803 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17800:17800 LF.Tactics <> n var
R17804:17804 LF.Tactics <> m var
R17783:17785 Coq.Init.Logic <> ::type_scope:x_'='_x not
R17775:17780 LF.Induction <> double def
R17782:17782 LF.Tactics <> n var
R17786:17791 LF.Induction <> double def
R17793:17793 LF.Tactics <> m var
prf 20441:20456 <> double_injective
R20493:20498 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20500:20502 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20499:20499 LF.Tactics <> n var
R20503:20503 LF.Tactics <> m var
R20482:20484 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20474:20479 LF.Induction <> double def
R20481:20481 LF.Tactics <> n var
R20485:20490 LF.Induction <> double def
R20492:20492 LF.Tactics <> m var
prf 22407:22414 <> eqb_true
R22445:22448 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22450:22452 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22449:22449 LF.Tactics <> n var
R22453:22453 LF.Tactics <> m var
R22438:22440 Coq.Init.Logic <> ::type_scope:x_'='_x not
R22433:22436 LF.Basics <> ::nat_scope:x_'=?'_x not
R22432:22432 LF.Tactics <> n var
R22437:22437 LF.Tactics <> m var
R22441:22444 LF.Basics <> true constr
def 22989:23019 <> manual_grade_for_informal_proof
R23023:23028 Coq.Init.Datatypes <> option ind
R23034:23034 LF.Poly <> ::type_scope:x_'*'_x not
R23031:23033 Coq.Init.Datatypes <> nat ind
R23035:23040 Coq.Strings.String <> string ind
R23046:23049 Coq.Init.Datatypes <> None constr
R23070:23078 LF.Induction <> plus_n_Sm thm
prf 23305:23322 <> plus_n_n_injective
R23353:23358 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23360:23362 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23359:23359 LF.Tactics <> n var
R23363:23363 LF.Tactics <> m var
R23345:23347 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23341:23343 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R23340:23340 LF.Tactics <> n var
R23344:23344 LF.Tactics <> n var
R23349:23351 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R23348:23348 LF.Tactics <> m var
R23352:23352 LF.Tactics <> m var
R23570:23578 LF.Induction <> plus_n_Sm thm
R23570:23578 LF.Induction <> plus_n_Sm thm
R23570:23578 LF.Induction <> plus_n_Sm thm
R23598:23606 LF.Induction <> plus_n_Sm thm
R23598:23606 LF.Induction <> plus_n_Sm thm
R23598:23606 LF.Induction <> plus_n_Sm thm
prf 23997:24025 <> double_injective_take2_FAILED
R24062:24067 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24069:24071 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24068:24068 LF.Tactics <> n var
R24072:24072 LF.Tactics <> m var
R24051:24053 Coq.Init.Logic <> ::type_scope:x_'='_x not
R24043:24048 LF.Induction <> double def
R24050:24050 LF.Tactics <> n var
R24054:24059 LF.Induction <> double def
R24061:24061 LF.Tactics <> m var
prf 25312:25333 <> double_injective_take2
R25370:25375 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25377:25379 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25376:25376 LF.Tactics <> n var
R25380:25380 LF.Tactics <> m var
R25359:25361 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25351:25356 LF.Induction <> double def
R25358:25358 LF.Tactics <> n var
R25362:25367 LF.Induction <> double def
R25369:25369 LF.Tactics <> m var
prf 27992:28011 <> nth_error_after_last
R28026:28028 Coq.Init.Datatypes <> nat ind
R28047:28050 LF.Poly <> list ind
R28052:28052 LF.Tactics <> X var
R28070:28075 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28089:28091 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28076:28084 LF.Poly <> nth_error def
R28088:28088 LF.Tactics <> n var
R28086:28086 LF.Tactics <> l var
R28092:28095 Coq.Init.Datatypes <> None constr
R28066:28068 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28058:28063 LF.Poly <> length def
R28065:28065 LF.Tactics <> l var
R28069:28069 LF.Tactics <> n var
def 28663:28668 <> square
R28676:28678 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R28675:28675 LF.Tactics <> n var
R28679:28679 LF.Tactics <> n var
prf 28749:28759 <> square_mult
R28789:28791 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28775:28780 LF.Tactics <> square def
R28784:28786 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R28783:28783 LF.Tactics <> n var
R28787:28787 LF.Tactics <> m var
R28800:28802 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R28792:28797 LF.Tactics <> square def
R28799:28799 LF.Tactics <> n var
R28803:28808 LF.Tactics <> square def
R28810:28810 LF.Tactics <> m var
R29124:29129 LF.Tactics <> square def
R29448:29457 LF.Induction <> mult_assoc prfax
R29448:29457 LF.Induction <> mult_assoc prfax
R29448:29457 LF.Induction <> mult_assoc prfax
R29483:29485 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29479:29481 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R29475:29477 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R29491:29493 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R29487:29489 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R29483:29485 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29479:29481 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R29475:29477 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R29491:29493 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R29487:29489 Coq.Init.Peano <> ::nat_scope:x_'*'_x not
R29512:29519 LF.Induction <> mul_comm thm
R29512:29519 LF.Induction <> mul_comm thm
R29512:29519 LF.Induction <> mul_comm thm
R29528:29537 LF.Induction <> mult_assoc prfax
R29528:29537 LF.Induction <> mult_assoc prfax
R29563:29572 LF.Induction <> mult_assoc prfax
R29563:29572 LF.Induction <> mult_assoc prfax
R29563:29572 LF.Induction <> mult_assoc prfax
def 29959:29961 <> foo
R29967:29969 Coq.Init.Datatypes <> nat ind
prf 30186:30197 <> silly_fact_1
R30220:30222 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30216:30218 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R30211:30213 LF.Tactics <> foo def
R30215:30215 LF.Tactics <> m var
R30234:30236 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R30223:30225 LF.Tactics <> foo def
R30229:30231 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R30228:30228 LF.Tactics <> m var
def 30464:30466 <> bar
R30481:30481 LF.Tactics <> x var
R30492:30492 Coq.Init.Datatypes <> O constr
R30503:30503 Coq.Init.Datatypes <> S constr
prf 30577:30595 <> silly_fact_2_FAILED
R30618:30620 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30614:30616 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R30609:30611 LF.Tactics <> bar def
R30613:30613 LF.Tactics <> m var
R30632:30634 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R30621:30623 LF.Tactics <> bar def
R30627:30629 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R30626:30626 LF.Tactics <> m var
prf 31685:31696 <> silly_fact_2
R31719:31721 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31715:31717 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R31710:31712 LF.Tactics <> bar def
R31714:31714 LF.Tactics <> m var
R31733:31735 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R31722:31724 LF.Tactics <> bar def
R31728:31730 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R31727:31727 LF.Tactics <> m var
prf 32083:32095 <> silly_fact_2'
R32118:32120 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32114:32116 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R32109:32111 LF.Tactics <> bar def
R32113:32113 LF.Tactics <> m var
R32132:32134 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R32121:32123 LF.Tactics <> bar def
R32127:32129 Coq.Init.Peano <> ::nat_scope:x_'+'_x not
R32126:32126 LF.Tactics <> m var
R32166:32168 LF.Tactics <> bar def
def 32813:32820 <> sillyfun
R32827:32829 Coq.Init.Datatypes <> nat ind
R32834:32837 LF.Basics <> bool ind
R32848:32851 LF.Basics <> ::nat_scope:x_'=?'_x not
R32847:32847 LF.Tactics <> n var
R32876:32879 LF.Basics <> ::nat_scope:x_'=?'_x not
R32875:32875 LF.Tactics <> n var
R32900:32904 LF.Basics <> false constr
R32887:32891 LF.Basics <> false constr
R32859:32863 LF.Basics <> false constr
prf 32916:32929 <> sillyfun_false
R32945:32947 Coq.Init.Datatypes <> nat ind
R32963:32965 Coq.Init.Logic <> ::type_scope:x_'='_x not
R32953:32960 LF.Tactics <> sillyfun def
R32962:32962 LF.Tactics <> n var
R32966:32970 LF.Basics <> false constr
R32999:33006 LF.Tactics <> sillyfun def
R33022:33025 LF.Basics <> ::nat_scope:x_'=?'_x not
R33022:33025 LF.Basics <> ::nat_scope:x_'=?'_x not
R33114:33117 LF.Basics <> ::nat_scope:x_'=?'_x not
R33114:33117 LF.Basics <> ::nat_scope:x_'=?'_x not
def 33990:33994 <> split
R34014:34017 LF.Poly <> list ind
R34021:34021 LF.Poly <> ::type_scope:x_'*'_x not
R34020:34020 LF.Tactics <> X var
R34022:34022 LF.Tactics <> Y var
R34043:34043 LF.Poly <> ::type_scope:x_'*'_x not
R34050:34054 LF.Poly <> ::type_scope:x_'*'_x not
R34061:34061 LF.Poly <> ::type_scope:x_'*'_x not
R34044:34047 LF.Poly <> list ind
R34049:34049 LF.Tactics <> X var
R34055:34058 LF.Poly <> list ind
R34060:34060 LF.Tactics <> Y var
R34074:34074 LF.Tactics <> l var
R34085:34086 LF.Poly <> :::'['_']' not
R34091:34091 LF.Poly <> :::'('_x_','_x_')' not
R34094:34095 LF.Poly <> :::'('_x_','_x_')' not
R34098:34098 LF.Poly <> :::'('_x_','_x_')' not
R34092:34093 LF.Poly <> :::'['_']' not
R34096:34097 LF.Poly <> :::'['_']' not
R34110:34113 LF.Poly <> :::x_'::'_x not
R34104:34104 LF.Poly <> :::'('_x_','_x_')' not
R34106:34107 LF.Poly <> :::'('_x_','_x_')' not
R34109:34109 LF.Poly <> :::'('_x_','_x_')' not
R34131:34135 LF.Tactics <> split def
R34152:34152 LF.Poly <> :::'('_x_','_x_')' not
R34155:34156 LF.Poly <> :::'('_x_','_x_')' not
R34159:34159 LF.Poly <> :::'('_x_','_x_')' not
R34164:34164 LF.Poly <> :::'('_x_','_x_')' not
R34172:34173 LF.Poly <> :::'('_x_','_x_')' not
R34181:34181 LF.Poly <> :::'('_x_','_x_')' not
R34166:34169 LF.Poly <> :::x_'::'_x not
R34175:34178 LF.Poly <> :::x_'::'_x not
R34290:34294 LF.Tactics <> split def
prf 34306:34318 <> combine_split
R34338:34341 LF.Poly <> list ind
R34345:34347 LF.Poly <> ::type_scope:x_'*'_x not
R34344:34344 LF.Tactics <> X var
R34348:34348 LF.Tactics <> Y var
R34379:34384 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R34398:34400 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34385:34391 LF.Poly <> combine def
R34396:34397 LF.Tactics <> l2 var
R34393:34394 LF.Tactics <> l1 var
R34401:34401 LF.Tactics <> l var
R34368:34370 Coq.Init.Logic <> ::type_scope:x_'='_x not
R34361:34365 LF.Tactics <> split def
R34367:34367 LF.Tactics <> l var
R34371:34371 LF.Poly <> :::'('_x_','_x_')' not
R34374:34375 LF.Poly <> :::'('_x_','_x_')' not
R34378:34378 LF.Poly <> :::'('_x_','_x_')' not
R34372:34373 LF.Tactics <> l1 var
R34376:34377 LF.Tactics <> l2 var
R34617:34621 LF.Tactics <> split def
R34617:34621 LF.Tactics <> split def
R34671:34676 Coq.Init.Logic <> eq_sym thm
R34671:34676 Coq.Init.Logic <> eq_sym thm
R34671:34676 Coq.Init.Logic <> eq_sym thm
R34697:34702 Coq.Init.Logic <> eq_sym thm
R34697:34702 Coq.Init.Logic <> eq_sym thm
R34697:34702 Coq.Init.Logic <> eq_sym thm
def 35281:35289 <> sillyfun1
R35296:35298 Coq.Init.Datatypes <> nat ind
R35303:35306 LF.Basics <> bool ind
R35317:35320 LF.Basics <> ::nat_scope:x_'=?'_x not
R35316:35316 LF.Tactics <> n var
R35344:35347 LF.Basics <> ::nat_scope:x_'=?'_x not
R35343:35343 LF.Tactics <> n var
R35367:35371 LF.Basics <> false constr
R35355:35358 LF.Basics <> true constr
R35328:35331 LF.Basics <> true constr
prf 35566:35585 <> sillyfun1_odd_FAILED
R35601:35603 Coq.Init.Datatypes <> nat ind
R35627:35632 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R35638:35640 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35633:35635 LF.Basics <> odd def
R35637:35637 LF.Tactics <> n var
R35641:35644 LF.Basics <> true constr
R35620:35622 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35609:35617 LF.Tactics <> sillyfun1 def
R35619:35619 LF.Tactics <> n var
R35623:35626 LF.Basics <> true constr
R35676:35684 LF.Tactics <> sillyfun1 def
R35706:35709 LF.Basics <> ::nat_scope:x_'=?'_x not
R35706:35709 LF.Basics <> ::nat_scope:x_'=?'_x not
prf 36527:36539 <> sillyfun1_odd
R36555:36557 Coq.Init.Datatypes <> nat ind
R36581:36586 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36592:36594 Coq.Init.Logic <> ::type_scope:x_'='_x not
R36587:36589 LF.Basics <> odd def
R36591:36591 LF.Tactics <> n var
R36595:36598 LF.Basics <> true constr
R36574:36576 Coq.Init.Logic <> ::type_scope:x_'='_x not
R36563:36571 LF.Tactics <> sillyfun1 def
R36573:36573 LF.Tactics <> n var
R36577:36580 LF.Basics <> true constr
R36630:36638 LF.Tactics <> sillyfun1 def
R36660:36663 LF.Basics <> ::nat_scope:x_'=?'_x not
R36660:36663 LF.Basics <> ::nat_scope:x_'=?'_x not
R36913:36920 LF.Tactics <> eqb_true thm
R36913:36920 LF.Tactics <> eqb_true thm
R37215:37218 LF.Basics <> ::nat_scope:x_'=?'_x not
R37215:37218 LF.Basics <> ::nat_scope:x_'=?'_x not
R37275:37282 LF.Tactics <> eqb_true thm
R37275:37282 LF.Tactics <> eqb_true thm
prf 37458:37479 <> bool_fn_applied_thrice
R37501:37504 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R37505:37508 LF.Basics <> bool ind
R37497:37500 LF.Basics <> bool ind
R37516:37519 LF.Basics <> bool ind
R37536:37538 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37525:37525 LF.Tactics <> f var
R37528:37528 LF.Tactics <> f var
R37531:37531 LF.Tactics <> f var
R37533:37533 LF.Tactics <> b var
R37539:37539 LF.Tactics <> f var
R37541:37541 LF.Tactics <> b var
R37596:37599 LF.Basics <> true constr
R37596:37599 LF.Basics <> true constr
R37659:37663 LF.Basics <> false constr
R37659:37663 LF.Basics <> false constr
R37735:37739 LF.Basics <> false constr
R37735:37739 LF.Basics <> false constr
R37769:37772 LF.Basics <> true constr
R37769:37772 LF.Basics <> true constr
prf 40471:40477 <> eqb_sym
R40495:40497 Coq.Init.Datatypes <> nat ind
R40503:40503 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40510:40514 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40521:40521 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40505:40508 LF.Basics <> ::nat_scope:x_'=?'_x not
R40504:40504 LF.Tactics <> n var
R40509:40509 LF.Tactics <> m var
R40516:40519 LF.Basics <> ::nat_scope:x_'=?'_x not
R40515:40515 LF.Tactics <> m var
R40520:40520 LF.Tactics <> n var
R40990:40992 LF.Basics <> eqb def
prf 41066:41074 <> eqb_trans
R41107:41112 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41126:41131 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R41138:41140 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41133:41136 LF.Basics <> ::nat_scope:x_'=?'_x not
R41132:41132 LF.Tactics <> n var
R41137:41137 LF.Tactics <> p var
R41141:41144 LF.Basics <> true constr
R41119:41121 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41114:41117 LF.Basics <> ::nat_scope:x_'=?'_x not
R41113:41113 LF.Tactics <> m var
R41118:41118 LF.Tactics <> p var
R41122:41125 LF.Basics <> true constr
R41100:41102 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41095:41098 LF.Basics <> ::nat_scope:x_'=?'_x not
R41094:41094 LF.Tactics <> n var
R41099:41099 LF.Tactics <> m var
R41103:41106 LF.Basics <> true constr
R41215:41222 LF.Tactics <> eqb_true thm
R41215:41222 LF.Tactics <> eqb_true thm
def 41930:41952 <> split_combine_statement
prf 42126:42138 <> split_combine
R42142:42164 LF.Tactics <> split_combine_statement prfax
def 42255:42284 <> manual_grade_for_split_combine
R42288:42293 Coq.Init.Datatypes <> option ind
R42299:42299 LF.Poly <> ::type_scope:x_'*'_x not
R42296:42298 Coq.Init.Datatypes <> nat ind
R42300:42305 Coq.Strings.String <> string ind
R42311:42314 Coq.Init.Datatypes <> None constr
prf 42334:42343 <> filter_inj
R42373:42376 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42377:42380 LF.Basics <> bool ind
R42372:42372 LF.Tactics <> X var
R42392:42395 LF.Poly <> list ind
R42397:42397 LF.Tactics <> X var
R42408:42411 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R42426:42428 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42412:42417 LF.Poly <> filter def
R42424:42425 LF.Tactics <> l1 var
R42419:42422 LF.Tactics <> test var
R42429:42434 LF.Poly <> filter def
R42441:42442 LF.Tactics <> l2 var
R42436:42439 LF.Tactics <> test var
R42403:42405 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42401:42402 LF.Tactics <> l1 var
R42406:42407 LF.Tactics <> l2 var
prf 43467:43481 <> filter_exercise
R43512:43515 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43516:43519 LF.Basics <> bool ind
R43511:43511 LF.Tactics <> X var
R43529:43529 LF.Tactics <> X var
R43540:43543 LF.Poly <> list ind
R43545:43545 LF.Tactics <> X var
R43572:43575 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R43582:43584 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43576:43579 LF.Tactics <> test var
R43581:43581 LF.Tactics <> x var
R43585:43588 LF.Basics <> true constr
R43562:43564 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43549:43554 LF.Poly <> filter def
R43561:43561 LF.Tactics <> l var
R43556:43559 LF.Tactics <> test var
R43566:43569 LF.Poly <> :::x_'::'_x not
R43565:43565 LF.Tactics <> x var
R43570:43571 LF.Tactics <> lf var
def 44674:44680 <> forallb
R44702:44705 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R44706:44709 LF.Basics <> bool ind
R44701:44701 LF.Tactics <> X var
R44717:44720 LF.Poly <> list ind
R44722:44722 LF.Tactics <> X var
R44727:44730 LF.Basics <> bool ind
R44746:44746 LF.Tactics <> l var
R44757:44759 LF.Poly <> nil constr
R44764:44767 LF.Basics <> true constr
R44774:44775 LF.Poly <> :::x_'::'_x not
R44788:44791 LF.Tactics <> test var
R44815:44818 LF.Basics <> true constr
R44823:44829 LF.Tactics <> forallb def
R44831:44834 LF.Tactics <> test var
R44853:44857 LF.Basics <> false constr
R44862:44866 LF.Basics <> false constr
def 44901:44914 <> test_forallb_1
R44941:44943 Coq.Init.Logic <> ::type_scope:x_'='_x not
R44918:44924 LF.Tactics <> forallb def
R44930:44930 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44932:44932 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44934:44934 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44936:44936 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44938:44938 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44940:44940 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R44926:44928 LF.Basics <> odd def
R44944:44947 LF.Basics <> true constr
def 44984:44997 <> test_forallb_2
R45027:45029 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45001:45007 LF.Tactics <> forallb def
R45014:45014 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45020:45020 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45026:45026 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45015:45019 LF.Basics <> false constr
R45021:45025 LF.Basics <> false constr
R45009:45012 LF.Basics <> negb def
R45030:45033 LF.Basics <> true constr
def 45070:45083 <> test_forallb_3
R45109:45111 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45087:45093 LF.Tactics <> forallb def
R45100:45100 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45102:45102 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45104:45104 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45106:45106 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45108:45108 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45095:45098 LF.Basics <> even def
R45112:45116 LF.Basics <> false constr
def 45153:45166 <> test_forallb_4
R45188:45190 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45170:45176 LF.Tactics <> forallb def
R45186:45187 LF.Poly <> :::'['_']' not
R45179:45181 LF.Basics <> eqb def
R45191:45194 LF.Basics <> true constr
def 45232:45238 <> existsb
R45260:45263 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45264:45267 LF.Basics <> bool ind
R45259:45259 LF.Tactics <> X var
R45275:45278 LF.Poly <> list ind
R45280:45280 LF.Tactics <> X var
R45285:45288 LF.Basics <> bool ind
R45303:45303 LF.Tactics <> l var
R45315:45317 LF.Poly <> nil constr
R45322:45326 LF.Basics <> false constr
R45333:45334 LF.Poly <> :::x_'::'_x not
R45347:45350 LF.Tactics <> test var
R45375:45378 LF.Basics <> true constr
R45383:45386 LF.Basics <> true constr
R45403:45407 LF.Basics <> false constr
R45412:45418 LF.Tactics <> existsb def
R45420:45423 LF.Tactics <> test var
def 45460:45473 <> test_existsb_1
R45502:45504 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45477:45483 LF.Tactics <> existsb def
R45493:45493 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45495:45495 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45497:45497 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45499:45499 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45501:45501 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45486:45488 LF.Basics <> eqb def
R45505:45509 LF.Basics <> false constr
def 45546:45559 <> test_existsb_2
R45600:45602 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45563:45569 LF.Tactics <> existsb def
R45583:45583 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45588:45588 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45593:45593 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45599:45599 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45584:45587 LF.Basics <> true constr
R45589:45592 LF.Basics <> true constr
R45594:45598 LF.Basics <> false constr
R45572:45575 LF.Basics <> andb def
R45577:45580 LF.Basics <> true constr
R45603:45606 LF.Basics <> true constr
def 45643:45656 <> test_existsb_3
R45685:45687 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45660:45666 LF.Tactics <> existsb def
R45672:45672 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45674:45674 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45676:45676 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45678:45678 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45680:45680 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45682:45682 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45684:45684 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45668:45670 LF.Basics <> odd def
R45688:45691 LF.Basics <> true constr
def 45728:45741 <> test_existsb_4
R45760:45762 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45745:45751 LF.Tactics <> existsb def
R45758:45759 LF.Poly <> :::'['_']' not
R45753:45756 LF.Basics <> even def
R45763:45767 LF.Basics <> false constr
def 45807:45814 <> existsb'
R45836:45839 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R45840:45843 LF.Basics <> bool ind
R45835:45835 LF.Tactics <> X var
R45851:45854 LF.Poly <> list ind
R45856:45856 LF.Tactics <> X var
R45861:45864 LF.Basics <> bool ind
R45873:45876 LF.Basics <> negb def
R45879:45885 LF.Tactics <> forallb def
R45914:45914 LF.Tactics <> l var
R45898:45901 LF.Basics <> negb def
R45904:45907 LF.Tactics <> test var
R45909:45909 LF.Tactics <> x var
def 45927:45941 <> test_existsb_11
R45971:45973 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45945:45952 LF.Tactics <> existsb' def
R45962:45962 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45964:45964 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45966:45966 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45968:45968 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45970:45970 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R45955:45957 LF.Basics <> eqb def
R45974:45978 LF.Basics <> false constr
prf 46015:46030 <> existsb_existsb'
R46061:46064 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46065:46068 LF.Basics <> bool ind
R46060:46060 LF.Tactics <> X var
R46076:46079 LF.Poly <> list ind
R46081:46081 LF.Tactics <> X var
R46101:46103 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46087:46093 LF.Tactics <> existsb def
R46100:46100 LF.Tactics <> l var
R46095:46098 LF.Tactics <> test var
R46104:46111 LF.Tactics <> existsb' def
R46118:46118 LF.Tactics <> l var
R46113:46116 LF.Tactics <> test var
R46254:46261 LF.Tactics <> existsb' def
R46315:46322 LF.Tactics <> existsb' def
